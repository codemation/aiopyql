name: tests
on: [push, pull_request]

jobs:
  # Label of the container job
  test-postgres-mysql-sqlite:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    #container: joshjamison/python38:latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: abcd1234
          POSTGRES_DB: joshdb

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        # Docker Hub image
        image: mysql
        # Provide the password for postgres
        env:
          MYSQL_USER: josh
          MYSQL_PASSWORD: abcd1234
          MYSQL_ROOT_PASSWORD: abcd1234
          MYSQL_DATABASE: joshdb

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test Aiopyql on PostgreSQL
        run: |
          python -m unittest tests/test_postgres.py || \
          python -m unittest tests/test_postgres.py
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DB_HOST: postgres

      - name: Test Aiopyql on Mysql
        run: |
          python -m unittest tests/test_mysql.py || \
          python -m unittest tests/test_mysql.py
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DB_HOST: mysql
      - name: Test Aiopyql on sqlite
        run: |
          python -m unittest tests/test_sqlite.py